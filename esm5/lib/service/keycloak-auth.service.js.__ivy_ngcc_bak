/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*
 * Copyright (c) 2019. This Code is under license and belongs to Coding Motion
 */
import { Inject, Injectable } from '@angular/core';
import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';
import { DeepLinkService } from './deep-link.service';
import { StorageService } from './storage.service';
import { BrowserTab } from '@ionic-native/browser-tab/ngx';
import { JwtHelperService } from '@auth0/angular-jwt';
import { BehaviorSubject } from 'rxjs';
import * as Keycloak_ from 'keycloak-js';
import { InAppBrowser } from '@ionic-native/in-app-browser/ngx';
import { Router } from '@angular/router';
import { KcConfig } from '../model/kc-config';
import { DeepLinkConfig } from '../model/deep-link-config';
import { KEYCLOAK_OPTIONS } from '../contant/kc-injection-token';
import { DEEP_LINKING_OPTIONS } from '../contant/deep-linking-config-injection-token';
// Workaround from https://github.com/ng-packagr/ng-packagr/issues/343#issuecomment-350965445
/** @type {?} */
var Keycloak = Keycloak_;
/** @type {?} */
var jwtHelperService = new JwtHelperService();
var KeycloakAuthService = /** @class */ (function () {
    function KeycloakAuthService(deepLinkConfig, kcConfig, http, browserTab, router, storage, inAppBrowser, deepLinkService) {
        this.http = http;
        this.browserTab = browserTab;
        this.router = router;
        this.storage = storage;
        this.inAppBrowser = inAppBrowser;
        this.deepLinkService = deepLinkService;
        this.scope = kcConfig.scope;
        this.keycloakConfig = kcConfig.jsonConfig;
        this.appPrefix = deepLinkConfig.deepLinkingScheme + "://app";
    }
    /**
     *
     */
    /**
     *
     * @return {?}
     */
    KeycloakAuthService.prototype.user = /**
     *
     * @return {?}
     */
    function () {
        if (!this.subject) {
            this.subject = new BehaviorSubject(null);
        }
        return this.subject.asObservable();
    };
    /**
     *
     */
    /**
     *
     * @return {?}
     */
    KeycloakAuthService.prototype.init = /**
     *
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.initKeycloak()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/, this.refresh()];
                }
            });
        });
    };
    /**
     *
     */
    /**
     *
     * @return {?}
     */
    KeycloakAuthService.prototype.logout = /**
     *
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var url;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.handleNewToken(null)];
                    case 1:
                        _a.sent();
                        url = this.getLogoutUrl();
                        return [2 /*return*/, new Promise((/**
                             * @param {?} resolve
                             * @param {?} reject
                             * @return {?}
                             */
                            function (resolve, reject) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                                var browser_1, sub_1;
                                var _this = this;
                                return tslib_1.__generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0: return [4 /*yield*/, this.browserTab.isAvailable()];
                                        case 1:
                                            if (_a.sent()) {
                                                this.browserTab.openUrl(url)
                                                    .then((/**
                                                 * @return {?}
                                                 */
                                                function () { return _this.browserTab.close(); }))
                                                    .catch((/**
                                                 * @param {?} err
                                                 * @return {?}
                                                 */
                                                function (err) { return reject(err); }));
                                                resolve();
                                            }
                                            else {
                                                browser_1 = this.inAppBrowser.create(url, '_system');
                                                sub_1 = browser_1.on('loadstop')
                                                    .subscribe((/**
                                                 * @return {?}
                                                 */
                                                function () {
                                                    browser_1.close();
                                                    resolve();
                                                    sub_1.unsubscribe();
                                                }), (/**
                                                 * @param {?} err
                                                 * @return {?}
                                                 */
                                                function (err) {
                                                    reject(err);
                                                    sub_1.unsubscribe();
                                                }));
                                            }
                                            return [2 /*return*/];
                                    }
                                });
                            }); }))];
                }
            });
        });
    };
    /**
     *
     * @param isLogin
     * @param redirectUrl
     */
    /**
     *
     * @param {?=} isLogin
     * @param {?=} redirectUrl
     * @return {?}
     */
    KeycloakAuthService.prototype.login = /**
     *
     * @param {?=} isLogin
     * @param {?=} redirectUrl
     * @return {?}
     */
    function (isLogin, redirectUrl) {
        if (isLogin === void 0) { isLogin = true; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var response, err_1, context;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        if (redirectUrl[0] === '/') {
                            redirectUrl = redirectUrl.substr(1);
                        }
                        return [4 /*yield*/, this.beginLoginAndGetCode(redirectUrl, isLogin)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, this.continueLoginWithCode(response)];
                    case 2:
                        err_1 = _a.sent();
                        context = { messageError: 'Ionic Keycloak Error: error by login' };
                        Object.assign(err_1, { context: context });
                        throw err_1;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /**
     *
     * @param refresh
     */
    /**
     *
     * @param {?=} refresh
     * @return {?}
     */
    KeycloakAuthService.prototype.getToken = /**
     *
     * @param {?=} refresh
     * @return {?}
     */
    function (refresh) {
        if (refresh === void 0) { refresh = false; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var authToken;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.storage.getToken()];
                    case 1:
                        authToken = _a.sent();
                        if (!authToken) {
                            return [2 /*return*/, null];
                        }
                        if (!(refresh || jwtHelperService.isTokenExpired(authToken.access_token, 10))) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.refresh()];
                    case 2:
                        authToken = _a.sent();
                        _a.label = 3;
                    case 3: return [2 /*return*/, authToken.access_token];
                }
            });
        });
    };
    /**
     * @param {?=} refresh
     * @return {?}
     */
    KeycloakAuthService.prototype.getTokenDecoded = /**
     * @param {?=} refresh
     * @return {?}
     */
    function (refresh) {
        if (refresh === void 0) { refresh = false; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var token;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getToken(refresh)];
                    case 1:
                        token = _a.sent();
                        return [2 /*return*/, (/** @type {?} */ (jwtHelperService.decodeToken(token)))];
                }
            });
        });
    };
    /**
     * @private
     * @param {?=} redirectUrl
     * @return {?}
     */
    KeycloakAuthService.prototype.getLogoutUrl = /**
     * @private
     * @param {?=} redirectUrl
     * @return {?}
     */
    function (redirectUrl) {
        if (redirectUrl === void 0) { redirectUrl = this.router.url; }
        return this.keycloakInstance.createLogoutUrl({
            redirectUri: this.appPrefix + encodeURIComponent(redirectUrl)
        });
    };
    /**
     * @private
     * @return {?}
     */
    KeycloakAuthService.prototype.getKcJsonStructure = /**
     * @private
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var prom, config;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        prom = this.keycloakConfig();
                        if (!(prom instanceof Promise)) return [3 /*break*/, 2];
                        return [4 /*yield*/, prom];
                    case 1:
                        config = _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        config = prom;
                        _a.label = 3;
                    case 3:
                        /**
                         * This line because the init method needs the clientId and url to work
                         * which are the resource and the auth-server-url respectively
                         */
                        config.clientId = config.resource;
                        config.url = config['auth-server-url'];
                        return [2 /*return*/, config];
                }
            });
        });
    };
    /**
     * @private
     * @param {?} authToken
     * @return {?}
     */
    KeycloakAuthService.prototype.handleNewToken = /**
     * @private
     * @param {?} authToken
     * @return {?}
     */
    function (authToken) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var user;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!authToken) return [3 /*break*/, 2];
                        user = jwtHelperService.decodeToken(authToken.id_token || authToken.access_token);
                        if (!this.subject) {
                            this.subject = new BehaviorSubject(user);
                        }
                        this.subject.next(user);
                        return [4 /*yield*/, this.storage.setToken(authToken)];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 2:
                        if (!this.subject) {
                            this.subject = new BehaviorSubject(null);
                        }
                        this.subject.next(null);
                        return [4 /*yield*/, this.storage.setToken(null)];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @private
     * @param {?} uri
     * @param {?} body
     * @param {?=} options
     * @return {?}
     */
    KeycloakAuthService.prototype.createPostRequest = /**
     * @private
     * @param {?} uri
     * @param {?} body
     * @param {?=} options
     * @return {?}
     */
    function (uri, body, options) {
        return this.http.post(uri, body, options).toPromise();
    };
    /**
     * @private
     * @param {?} refreshToken
     * @return {?}
     */
    KeycloakAuthService.prototype.getRefreshParams = /**
     * @private
     * @param {?} refreshToken
     * @return {?}
     */
    function (refreshToken) {
        /** @type {?} */
        var params = new HttpParams()
            .set('grant_type', 'refresh_token')
            .set('refresh_token', refreshToken)
            .set('client_id', encodeURIComponent(this.keycloakInstance.clientId));
        /** @type {?} */
        var secret = this.keycloakInstance.clientSecret;
        if (secret) {
            return params
                .set('client_secret', encodeURIComponent(secret));
        }
        return params;
    };
    /**
     * @private
     * @param {?} code
     * @param {?} redirectUrl
     * @return {?}
     */
    KeycloakAuthService.prototype.getAccessTokenParams = /**
     * @private
     * @param {?} code
     * @param {?} redirectUrl
     * @return {?}
     */
    function (code, redirectUrl) {
        /** @type {?} */
        var redirectUri = new HttpParams()
            .set('grant_type', 'authorization_code')
            .set('code', code)
            .set('client_id', encodeURIComponent(this.keycloakInstance.clientId))
            .set('redirect_uri', redirectUrl);
        if (this.scope || (this.actualKeycloakConfig && this.actualKeycloakConfig.scope)) {
            redirectUri = redirectUri.set('scope', this.scope || this.actualKeycloakConfig.scope);
        }
        /** @type {?} */
        var secret = this.keycloakInstance.clientSecret;
        if (secret) {
            redirectUri = redirectUri.set('client_secret', encodeURIComponent(secret));
        }
        return redirectUri;
    };
    /**
     * @private
     * @return {?}
     */
    KeycloakAuthService.prototype.getTokenRequestHeaders = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var headers = new HttpHeaders()
            .set('Content-Type', 'application/x-www-form-urlencoded');
        /** @type {?} */
        var clientSecret = this.keycloakInstance.clientSecret;
        /** @type {?} */
        var clientId = this.keycloakInstance.clientId;
        if (clientId && clientSecret) {
            headers.set('Authorization', 'Basic ' + btoa(clientId + ':' + clientSecret));
        }
        return headers;
    };
    /**
     * @private
     * @return {?}
     */
    KeycloakAuthService.prototype.refresh = /**
     * @private
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var tokens, uri, headers, body, e_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 4, , 6]);
                        return [4 /*yield*/, this.storage.getToken()];
                    case 1:
                        tokens = _a.sent();
                        if (!tokens) return [3 /*break*/, 3];
                        if (!!this.isValidToken(tokens)) return [3 /*break*/, 3];
                        uri = this.getTokenUrl();
                        headers = this.getTokenRequestHeaders();
                        body = this.getRefreshParams(tokens.refresh_token);
                        return [4 /*yield*/, this.createPostRequest(uri, body, { headers: headers })];
                    case 2:
                        tokens = _a.sent();
                        _a.label = 3;
                    case 3:
                        this.handleNewToken(tokens);
                        return [2 /*return*/, tokens];
                    case 4:
                        e_1 = _a.sent();
                        return [4 /*yield*/, this.logout()];
                    case 5:
                        _a.sent();
                        return [2 /*return*/, null];
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @private
     * @return {?}
     */
    KeycloakAuthService.prototype.getTokenUrl = /**
     * @private
     * @return {?}
     */
    function () {
        return this.keycloakInstance.authServerUrl + "/realms/" + this.keycloakInstance.realm + "/protocol/openid-connect/token";
    };
    /**
     * @private
     * @param {?} authToken
     * @return {?}
     */
    KeycloakAuthService.prototype.isValidToken = /**
     * @private
     * @param {?} authToken
     * @return {?}
     */
    function (authToken) {
        if (!authToken) {
            return false;
        }
        return jwtHelperService.isTokenExpired(authToken.access_token, 10);
    };
    /**
     * @private
     * @return {?}
     */
    KeycloakAuthService.prototype.initKeycloakInstance = /**
     * @private
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var keycloakConfig;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getKcJsonStructure()];
                    case 1:
                        keycloakConfig = _a.sent();
                        this.actualKeycloakConfig = keycloakConfig;
                        this.keycloakInstance = Keycloak(keycloakConfig);
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @private
     * @return {?}
     */
    KeycloakAuthService.prototype.initKeycloak = /**
     * @private
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.initKeycloakInstance()];
                    case 1:
                        _a.sent();
                        this.keycloakInstance
                            .init({
                            adapter: 'cordova-native',
                            redirectUri: this.appPrefix + '/'
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @private
     * @param {?} path
     * @param {?=} login
     * @return {?}
     */
    KeycloakAuthService.prototype.beginLoginAndGetCode = /**
     * @private
     * @param {?} path
     * @param {?=} login
     * @return {?}
     */
    function (path, login) {
        if (login === void 0) { login = true; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var options, url;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        path = this.appPrefix + "/" + path;
                        return [4 /*yield*/, this.storage.setToken(null)];
                    case 1:
                        _a.sent();
                        options = {
                            redirectUri: path
                        };
                        url = login
                            ? this.keycloakInstance.createLoginUrl(options)
                            : this.keycloakInstance.createRegisterUrl(options);
                        return [4 /*yield*/, this.browserTab.isAvailable()];
                    case 2:
                        if (_a.sent()) {
                            this.browserTab.openUrl(url);
                        }
                        else {
                            this.inAppBrowser.create(url, '_system');
                        }
                        return [2 /*return*/, new Promise((/**
                             * @param {?} resolve
                             * @param {?} reject
                             * @return {?}
                             */
                            function (resolve, reject) {
                                /** @type {?} */
                                var sub = _this.deepLinkService
                                    .params()
                                    .subscribe((/**
                                 * @param {?} code
                                 * @return {?}
                                 */
                                function (code) {
                                    resolve({ code: code, redirectUri: path });
                                    sub.unsubscribe();
                                }), (/**
                                 * @param {?} error
                                 * @return {?}
                                 */
                                function (error) {
                                    reject(error);
                                    sub.unsubscribe();
                                }));
                            }))];
                }
            });
        });
    };
    /**
     * @private
     * @param {?} __0
     * @return {?}
     */
    KeycloakAuthService.prototype.continueLoginWithCode = /**
     * @private
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var code = _a.code, redirectUrl = _a.redirectUri;
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var uri, body, headers;
            var _this = this;
            return tslib_1.__generator(this, function (_b) {
                this.browserTab.close()
                    .catch((/**
                 * @param {?=} err
                 * @return {?}
                 */
                function (err) {
                    if (err === void 0) { err = {}; }
                    /** @type {?} */
                    var context = { message: 'Error while closing the browser' };
                    console.log(context.message, err);
                    Object.assign(err, { context: context });
                    throw err;
                }));
                uri = this.getTokenUrl();
                body = this.getAccessTokenParams(code, redirectUrl);
                headers = this.getTokenRequestHeaders();
                return [2 /*return*/, this.createPostRequest(uri, body, { headers: headers })
                        .then((/**
                     * @param {?} authToken
                     * @return {?}
                     */
                    function (authToken) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                        return tslib_1.__generator(this, function (_a) {
                            this.handleNewToken(authToken);
                            return [2 /*return*/, authToken];
                        });
                    }); }))];
            });
        });
    };
    KeycloakAuthService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    KeycloakAuthService.ctorParameters = function () { return [
        { type: DeepLinkConfig, decorators: [{ type: Inject, args: [DEEP_LINKING_OPTIONS,] }] },
        { type: KcConfig, decorators: [{ type: Inject, args: [KEYCLOAK_OPTIONS,] }] },
        { type: HttpClient },
        { type: BrowserTab },
        { type: Router },
        { type: StorageService },
        { type: InAppBrowser },
        { type: DeepLinkService }
    ]; };
    return KeycloakAuthService;
}());
export { KeycloakAuthService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    KeycloakAuthService.prototype.subject;
    /**
     * @type {?}
     * @private
     */
    KeycloakAuthService.prototype.scope;
    /**
     * @type {?}
     * @private
     */
    KeycloakAuthService.prototype.appPrefix;
    /**
     * @type {?}
     * @private
     */
    KeycloakAuthService.prototype.keycloakConfig;
    /**
     * @type {?}
     * @private
     */
    KeycloakAuthService.prototype.actualKeycloakConfig;
    /**
     * @type {?}
     * @private
     */
    KeycloakAuthService.prototype.keycloakInstance;
    /**
     * @type {?}
     * @protected
     */
    KeycloakAuthService.prototype.http;
    /**
     * @type {?}
     * @protected
     */
    KeycloakAuthService.prototype.browserTab;
    /**
     * @type {?}
     * @protected
     */
    KeycloakAuthService.prototype.router;
    /**
     * @type {?}
     * @protected
     */
    KeycloakAuthService.prototype.storage;
    /**
     * @type {?}
     * @protected
     */
    KeycloakAuthService.prototype.inAppBrowser;
    /**
     * @type {?}
     * @protected
     */
    KeycloakAuthService.prototype.deepLinkService;
}
//# sourceMappingURL=data:application/json;base64,